{"version":3,"sources":["axios.js","Row.js","request.js","Banner.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","_ref","title","fetchUrl","isLargeRow","movies","SetMovies","useState","trailerUrl","setTrailerUrl","movieOverview","SetMovieOverview","movieName","setMovieName","useEffect","async","request","get","data","results","fetchData","_jsxs","className","children","_jsx","map","movie","concat","src","poster_path","backdrop_path","alt","name","onClick","movieTrailer","then","url","Urlparms","URLSearchParams","URL","search","catch","error","console","log","original_name","overview","handleClick","id","Youtube","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanticMovies","fetchDocumentaries","Banner","SetMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","str","n","substr","Navbar","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eee26576.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\"\r\n})\r\n\r\nexport default instance;","import React, {useEffect, useState} from 'react';\r\nimport axios from './axios';\r\nimport \"./Row.css\";\r\nimport \"./Banner.css\"\r\nimport Youtube from 'react-youtube';\r\nimport movieTrailer from 'movie-trailer';\r\n\r\nconst baseUrlImg = \"https://image.tmdb.org/t/p/original/\"\r\n\r\nfunction Row({title, fetchUrl, isLargeRow}) {\r\n    const [movies, SetMovies] = useState([]);\r\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n    const [movieOverview, SetMovieOverview] = useState(\"\");\r\n    const [movieName, setMovieName] = useState(\"\");\r\n\r\n    useEffect(()=> {\r\n        async function fetchData(){\r\n            const request = await axios.get(fetchUrl);\r\n            SetMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, [fetchUrl]);\r\n\r\n    const opts = {\r\n        height: \"400\",\r\n        width: \"100%\",\r\n        playerVars: {\r\n            autoplay: 1,\r\n        }\r\n    };\r\n    const handleClick = (movie) => {\r\n        \r\n        if(trailerUrl){\r\n            setTrailerUrl('');\r\n        }else{\r\n            movieTrailer(movie?.name || movie?.title)\r\n            .then(url => {\r\n                const Urlparms = new URLSearchParams(new URL(url).search); \r\n                setTrailerUrl(Urlparms.get('v')) ;\r\n            }).catch(error => console.log(error));\r\n            setMovieName(movie.title || movie.name || movie.original_name);\r\n            SetMovieOverview(movie.overview);\r\n        }\r\n    };\r\n    return (\r\n        <div className = \"row\">\r\n            <h2>{title}</h2>\r\n            <div className=\"row_posters\">\r\n                {movies.map(movie =>(\r\n                    <img className={`row_poster ${isLargeRow && \"row_poster_large\"}`} \r\n                    key={movie.id}\r\n                    src={`${baseUrlImg}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} \r\n                    alt={movie.name}\r\n                    onClick={()=>handleClick(movie)}\r\n                    />                    \r\n                ))}\r\n            </div>\r\n            {trailerUrl && <Youtube videoId={trailerUrl} opts={opts} />}\r\n            {trailerUrl && <h1 className=\"banner_title\"> {movieName} </h1>}\r\n            {trailerUrl && <h2 className=\"banner_overview\">{movieOverview}</h2>}       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n","const API_KEY = \"499101ab7094cf73b6ba5dc757ef6de0\";\r\n\r\nconst requests = {\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-us`,\r\n    fetchNetflixOriginals: `discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated: `movie/top_rated?api_key=${API_KEY}&language=en-us`,\r\n    fetchActionMovies: `discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanticMovies: `discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries: `discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n}\r\n\r\nexport default requests;","import React, {useState, useEffect} from 'react';\r\nimport axios from './axios';\r\nimport requests from './request';\r\nimport \"./Banner.css\";\r\n\r\nconst baseUrlImg = \"https://image.tmdb.org/t/p/original/\"\r\n\r\n\r\nfunction Banner() {\r\n\r\n    const [movie, SetMovie] = useState([]);\r\n    useEffect(()=> {\r\n        async function fetchData(){\r\n            const request = await axios.get(requests.fetchNetflixOriginals);\r\n            SetMovie(request.data.results[Math.floor(Math.random()* request.data.results.length-1)]);\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, []);\r\n    console.log(movie);\r\n\r\n    function truncate(str,n) {\r\n        return str?.length > n ? str.substr(0,n-1) + \"...\" : str;\r\n    }\r\n\r\n    return (\r\n        <header className=\"banner\"\r\n            style = {{\r\n                backgroundSize: \"cover\",\r\n                backgroundImage: `url(${baseUrlImg}${movie.backdrop_path})`,\r\n                backgroundPosition: \"center center\",\r\n            }}\r\n        >\r\n        <div className=\"banner_contents\">\r\n            <h1 className=\"banner_title\"> {movie.title || movie.name || movie.original_name} </h1>\r\n            <div className=\"banner_buttons\">\r\n            <button className=\"banner_button\">Play</button>\r\n            <button className=\"banner_button\">Add To My List</button>\r\n            </div>\r\n            <h2 className=\"banner_overview\">{truncate(movie.overview, 150)} </h2>\r\n        </div>\r\n        <div className=\"banner--fadebottom\"/>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React, {useEffect, useState} from 'react'\r\nimport \"./Navbar.css\"\r\n\r\nfunction Navbar() {\r\n\r\n    const [show, handleShow] = useState(false);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", () => {\r\n            if(window.scrollY>200){\r\n                handleShow(true);\r\n            }else{\r\n                handleShow(false);\r\n            }\r\n        });\r\n        return () =>{\r\n            window.removeEventListener(\"scroll\")\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className={`navbar ${show && \"nav_black\"} `}>\r\n            <img className=\"navbar_logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\" alt=\"netflix\"/>\r\n            <img className=\"navbar_avatar\" src=\"https://img.icons8.com/color/48/000000/boruto-uzumaki.png\" alt=\"avatar\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react';\nimport './App.css';\nimport Row from './Row';\nimport Banner from './Banner';\nimport Navbar from './Navbar';\nimport requests from './request';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <Navbar/>\n      <Banner/>\n\n      \n      <Row title=\"TRENDING NOW\" fetchUrl={requests.fetchTrending} isLargeRow />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Netflix Originals\" fetchUrl={requests.fetchNetflixOriginals} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"Romantic Movies\" fetchUrl={requests.fetchRomanticMovies} />\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}